/* https://phoenixnap.com/kb/install-hadoop-ubuntu */
1. sudo apt update
2. sudo apt install openjdk-8-jdk -y
3. java -version; javac -version
4. sudo apt install openssh-server openssh-client -y
5. sudo adduser hdoop
6. su - hdoop
7. ssh-keygen -t rsa -P '' -f ~/.ssh/id_rsa
8. chmod 0600 ~/.ssh/authorized_keys
9. wget https://downloads.apache.org/hadoop/common/hadoop-3.2.1/hadoop-3.2.1.tar.gz
10. wget https://dlcdn.apache.org/hadoop/common/hadoop-3.3.1/hadoop-3.3.1.tar.gz
11. tar xzf hadoop-3.2.1.tar.gz
12. sudo nano .bashrc

#Hadoop Related Options
export HADOOP_HOME=/home/hdoop/hadoop-3.2.1
export HADOOP_INSTALL=$HADOOP_HOME
export HADOOP_MAPRED_HOME=$HADOOP_HOME
export HADOOP_COMMON_HOME=$HADOOP_HOME
export HADOOP_HDFS_HOME=$HADOOP_HOME
export YARN_HOME=$HADOOP_HOME
export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native
export PATH=$PATH:$HADOOP_HOME/sbin:$HADOOP_HOME/bin
export HADOOP_OPTS="-Djava.library.path=$HADOOP_HOME/lib/nativ"

13. source ~/.bashrc
14. export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
15. which javac
16. readlink -f /usr/bin/javac
17. sudo nano $HADOOP_HOME/etc/hadoop/core-site.xml
<configuration>
<property>
<name>hadoop.tmp.dir</name>
<value>/home/hdoop/tmpdata</value>
</property>
<property>
<name>fs.default.name</name>
<value>hdfs://127.0.0.1:9000</value>
</property>
</configuration>

18. sudo nano $HADOOP_HOME/etc/hadoop/hdfs-site.xml
<configuration>
<property>
<name>dfs.data.dir</name>
<value>/home/hdoop/dfsdata/namenode</value>
</property>
<property>
<name>dfs.data.dir</name>
<value>/home/hdoop/dfsdata/datanode</value>
</property>
<property>
<name>dfs.replication</name>
<value>1</value>
</property>
</configuration>

19. sudo nano $HADOOP_HOME/etc/hadoop/mapred-site.xml
<configuration>
<property>
<name>mapreduce.framework.name</name>
<value>yarn</value>
</property>
</configuration>

20. sudo nano $HADOOP_HOME/etc/hadoop/yarn-site.xml
<configuration>
<property>
<name>yarn.nodemanager.aux-services</name>
<value>mapreduce_shuffle</value>
</property>
<property>
<name>yarn.nodemanager.aux-services.mapreduce.shuffle.class</name>
<value>org.apache.hadoop.mapred.ShuffleHandler</value>
</property>
<property>
<name>yarn.resourcemanager.hostname</name>
<value>127.0.0.1</value>
</property>
<property>
<name>yarn.acl.enable</name>
<value>0</value>
</property>
<property>
<name>yarn.nodemanager.env-whitelist</name>   
<value>JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PERPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_MAPRED_HOME</value>
</property>
</configuration>

21. hdfs namenode -format
22. /home/hdoop/hadoop-3.3.1/sbin
23. ./start-dfs.sh
24. ./start-yarn.sh
25. jps
26. http://us2west-a.local:9870/dfshealth.html#tab-overview - Hadoop NameNode UI
27. http://us2west-a.local:9864/datanode.html - Individual DataNodes 
28. http://us2west-a.local:8088 - Yarn Manager 

/* https://community.cloudera.com/t5/Support-Questions/How-to-connect-yarn-web-UI-from-remote-machine/td-p/288888 */
# ps -ef | grep org.apache.hadoop.yarn.server.resourcemanager.ResourceManager
# netstat -tnlpa | grep $PID_OF_RESOURCE_MANAGER
